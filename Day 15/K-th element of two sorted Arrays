
import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main(String[] args) throws IOException
	{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while(t-->0)
        {
            StringTokenizer stt = new StringTokenizer(br.readLine());
            
            int n = Integer.parseInt(stt.nextToken());
            int m = Integer.parseInt(stt.nextToken());
            int k = Integer.parseInt(stt.nextToken());
            int a[] = new int[(int)(n)];
            int b[] = new int[(int)(m)];
    
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(inputLine[i]);
            }
            String inputLine1[] = br.readLine().trim().split(" ");
            for (int i = 0; i < m; i++) {
                b[i] = Integer.parseInt(inputLine1[i]);
            }
            Solution obj = new Solution();
            System.out.println(obj.kthElement( a, b, n, m, k));
            }
	}
}
class Solution {
    public long kthElement( int arr1[], int arr2[], int n, int m, int k) {
    
          int[] arr = new int[n+m];
          int i;
         for(i=0; i<n; i++) {
             arr[i] = arr1[i];
        }
        int x=0;
        for(int j=i; j<n+m;j++) {
            arr[j] = arr2[x++];
        }
        Arrays.sort(arr);
        return (long)arr[k-1];
    }
}
