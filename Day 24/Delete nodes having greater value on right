import java.util.*;

class Node
{

    int data;
    Node next;

    Node(int d)
    {
        data = d;
        next = null;
    }
}


public class LinkedList
{
    
   public static void print(Node root)
    {
        Node temp = root;
        while(temp!=null)
        {
            System.out.print(temp.data + " ");
            temp=temp.next;
        }
    }
    public static void main(String args[])
    {

       
        int value;
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t > 0 && sc.hasNextInt() )
        {
            int n = sc.nextInt();
            
            //int n=Integer.parseInt(br.readLine());
            int a1 = sc.nextInt();
            Node head = new Node(a1);
            Node tail = head;

            for (int i = 1; i < n && sc.hasNextInt() ; i++)
            {
                int a = sc.nextInt();
                tail.next = new Node(a);
                tail = tail.next;
            }


            Node result = new Solution().compute(head);
            print(result);
            System.out.println();
            t--;
        }
    }
}

class Solution
{
    Node compute(Node head)
    {
         if(head == null)
            return null;
            
        Node dummy = new Node(0);
        Node tail = dummy;
        Node curr = reverse(head);
        int max= curr.data;
        while(curr!=null)
        {
            if(curr.data>=max)
            {
                max=curr.data;
                tail.next= new Node(curr.data);
                tail=tail.next;
            }
            curr=curr.next;
        }
        dummy=dummy.next;
        dummy=reverse(dummy);
        return dummy;
    }
     public Node reverse(Node head){
        Node curr = head;
        Node prev = null;
        Node next = null;
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }

        return prev;
    }
}
  
