import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String input_line[] = in.readLine().trim().split("\\s+");
            int arr[] = new int[N];
            for(int i = 0;i < N;i++)
                arr[i] = Integer.parseInt(input_line[i]);
            
            Solution ob = new Solution();
            int x = ob.equalPartition(N, arr);
            if(x == 1)
                System.out.println("YES");
            else
                System.out.println("NO");
        }
    }
}

class Solution{
    
    static int equalPartition(int n, int arr[])
    {
        int sum = 0;
        for(int a: arr)
            sum+=a;
        if(sum%2 !=0)
            return 0;
        sum=sum/2;
        int dp[][]= new int[n+1][sum+1];
        dp[0][0]=1;
        for(int i=0;i<n;i++){
            for(int j=0;j<=sum;j++){
                if(dp[i][j]==1){
                    dp[i+1][j]=1;
                    if(j+arr[i]==sum)
                        return 1;
                    if(j+arr[i]<sum)
                        dp[i+1][j+arr[i]]=1;
                }    
               
           }
       }
       return dp[n][sum];
    }
}